{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91994\\\\Desktop\\\\Challan_Project\\\\frontend\\\\src\\\\pages\\\\WithdrawalPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import { useTranslation } from 'react-i18next'; // Import the translation hook\n// import styles from './WithdrawalPage.module.css';\n\n// const WithdrawalPage = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const { t } = useTranslation(); // Initialize translation hook\n//   const user = location.state?.user || {};\n//   const [withdrawalAmount, setWithdrawalAmount] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleNext = () => {\n//     setError('');\n//     const accountBalance = user?.accountBalance || 10000000;\n\n//     if (!withdrawalAmount || isNaN(withdrawalAmount)) {\n//       setError(t('enterValidAmount'));\n//       return;\n//     }\n\n//     if (withdrawalAmount > accountBalance) {\n//       setError(t('insufficientBalance'));\n//       return;\n//     }\n\n//     navigate('/authentication', { state: { user, total: withdrawalAmount } });\n//   };\n\n//   return (\n//     <div className={styles.container}>\n//       <div className={styles.card}>\n//         <h1 className={styles.title}>{t('withdrawalPageTitle')}</h1>\n//         <p className={styles.subtitle}>\n//           <strong>{t('accountHolder')}</strong> {user.name || t('unknown')}\n//         </p>\n//         <p className={styles.subtitle}>\n//           <strong> {t('accountNumberLabel')}</strong> {user?.account_number || t('unknown')}\n//         </p>\n//         <p className={styles.subtitle}>\n//           <strong>{t('accountBalance')}</strong> â‚¹{user.accountBalance || 10000000}\n//         </p>\n\n//         <div className={styles.inputContainer}>\n//           <label htmlFor=\"withdrawalAmount\" className={styles.label}>\n//             {t('enterWithdrawalAmount')}\n//           </label>\n//           <input\n//             type=\"number\"\n//             id=\"withdrawalAmount\"\n//             className={styles.input}\n//             value={withdrawalAmount}\n//             onChange={(e) => setWithdrawalAmount(parseFloat(e.target.value))}\n//             placeholder={t('enterWithdrawalAmount')}\n//           />\n//         </div>\n\n//         {error && <p className={styles.error}>{error}</p>}\n\n//         <button onClick={handleNext} className={styles.button}>\n//           {t('nextButton')}\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WithdrawalPage;\n\n// \n\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next'; // Import the translation hook\nimport styles from './WithdrawalPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WithdrawalPage = () => {\n  _s();\n  var _location$state, _user$balance;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation(); // Initialize translation hook\n\n  const user = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user) || {}; // Extract user from state\n  const [withdrawalAmount, setWithdrawalAmount] = useState('');\n  const [error, setError] = useState('');\n  const handleNext = () => {\n    setError('');\n    const accountBalance = user === null || user === void 0 ? void 0 : user.balance; // Fetch balance from user object\n\n    if (!withdrawalAmount || isNaN(withdrawalAmount)) {\n      setError(t('enterValidAmount'));\n      return;\n    }\n    if (withdrawalAmount > accountBalance) {\n      setError(t('insufficientBalance'));\n      return;\n    }\n    navigate('/authentication', {\n      state: {\n        user,\n        total: withdrawalAmount\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: t('withdrawalPageTitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.subtitle,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: t('accountHolder')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), \" \", (user === null || user === void 0 ? void 0 : user.name) || t('unknown')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.subtitle,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: t('accountNumberLabel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), \" \", (user === null || user === void 0 ? void 0 : user.account_number) || t('unknown')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.subtitle,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: t('accountBalance')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \" \\u20B9\", (user === null || user === void 0 ? void 0 : (_user$balance = user.balance) === null || _user$balance === void 0 ? void 0 : _user$balance.toFixed(2)) || t('unknown')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"withdrawalAmount\",\n          className: styles.label,\n          children: t('enterWithdrawalAmount')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"withdrawalAmount\",\n          className: styles.input,\n          value: withdrawalAmount,\n          onChange: e => setWithdrawalAmount(parseFloat(e.target.value)),\n          placeholder: t('enterWithdrawalAmount')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: styles.button,\n        children: t('nextButton')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(WithdrawalPage, \"V2iV96k1lSdWY8DF+n1BAgmTDqw=\", false, function () {\n  return [useLocation, useNavigate, useTranslation];\n});\n_c = WithdrawalPage;\nexport default WithdrawalPage;\nvar _c;\n$RefreshReg$(_c, \"WithdrawalPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","useTranslation","styles","jsxDEV","_jsxDEV","WithdrawalPage","_s","_location$state","_user$balance","location","navigate","t","user","state","withdrawalAmount","setWithdrawalAmount","error","setError","handleNext","accountBalance","balance","isNaN","total","className","container","children","card","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","name","account_number","toFixed","inputContainer","htmlFor","label","type","id","input","value","onChange","e","parseFloat","target","placeholder","onClick","button","_c","$RefreshReg$"],"sources":["C:/Users/91994/Desktop/Challan_Project/frontend/src/pages/WithdrawalPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import { useTranslation } from 'react-i18next'; // Import the translation hook\r\n// import styles from './WithdrawalPage.module.css';\r\n\r\n// const WithdrawalPage = () => {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const { t } = useTranslation(); // Initialize translation hook\r\n//   const user = location.state?.user || {};\r\n//   const [withdrawalAmount, setWithdrawalAmount] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleNext = () => {\r\n//     setError('');\r\n//     const accountBalance = user?.accountBalance || 10000000;\r\n\r\n//     if (!withdrawalAmount || isNaN(withdrawalAmount)) {\r\n//       setError(t('enterValidAmount'));\r\n//       return;\r\n//     }\r\n\r\n//     if (withdrawalAmount > accountBalance) {\r\n//       setError(t('insufficientBalance'));\r\n//       return;\r\n//     }\r\n\r\n//     navigate('/authentication', { state: { user, total: withdrawalAmount } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <div className={styles.card}>\r\n//         <h1 className={styles.title}>{t('withdrawalPageTitle')}</h1>\r\n//         <p className={styles.subtitle}>\r\n//           <strong>{t('accountHolder')}</strong> {user.name || t('unknown')}\r\n//         </p>\r\n//         <p className={styles.subtitle}>\r\n//           <strong> {t('accountNumberLabel')}</strong> {user?.account_number || t('unknown')}\r\n//         </p>\r\n//         <p className={styles.subtitle}>\r\n//           <strong>{t('accountBalance')}</strong> â‚¹{user.accountBalance || 10000000}\r\n//         </p>\r\n\r\n//         <div className={styles.inputContainer}>\r\n//           <label htmlFor=\"withdrawalAmount\" className={styles.label}>\r\n//             {t('enterWithdrawalAmount')}\r\n//           </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"withdrawalAmount\"\r\n//             className={styles.input}\r\n//             value={withdrawalAmount}\r\n//             onChange={(e) => setWithdrawalAmount(parseFloat(e.target.value))}\r\n//             placeholder={t('enterWithdrawalAmount')}\r\n//           />\r\n//         </div>\r\n\r\n//         {error && <p className={styles.error}>{error}</p>}\r\n\r\n//         <button onClick={handleNext} className={styles.button}>\r\n//           {t('nextButton')}\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default WithdrawalPage;\r\n\r\n\r\n// \r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next'; // Import the translation hook\r\nimport styles from './WithdrawalPage.module.css';\r\n\r\nconst WithdrawalPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation(); // Initialize translation hook\r\n\r\n  const user = location.state?.user || {}; // Extract user from state\r\n  const [withdrawalAmount, setWithdrawalAmount] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleNext = () => {\r\n    setError('');\r\n    const accountBalance = user?.balance; // Fetch balance from user object\r\n\r\n    if (!withdrawalAmount || isNaN(withdrawalAmount)) {\r\n      setError(t('enterValidAmount'));\r\n      return;\r\n    }\r\n\r\n    if (withdrawalAmount > accountBalance) {\r\n      setError(t('insufficientBalance'));\r\n      return;\r\n    }\r\n\r\n    navigate('/authentication', { state: { user, total: withdrawalAmount } });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.card}>\r\n        <h1 className={styles.title}>{t('withdrawalPageTitle')}</h1>\r\n        <p className={styles.subtitle}>\r\n          <strong>{t('accountHolder')}</strong> {user?.name || t('unknown')}\r\n        </p>\r\n        <p className={styles.subtitle}>\r\n          <strong>{t('accountNumberLabel')}</strong> {user?.account_number || t('unknown')}\r\n        </p>\r\n        <p className={styles.subtitle}>\r\n          <strong>{t('accountBalance')}</strong> â‚¹{user?.balance?.toFixed(2) || t('unknown')}\r\n        </p>\r\n\r\n        <div className={styles.inputContainer}>\r\n          <label htmlFor=\"withdrawalAmount\" className={styles.label}>\r\n            {t('enterWithdrawalAmount')}\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"withdrawalAmount\"\r\n            className={styles.input}\r\n            value={withdrawalAmount}\r\n            onChange={(e) => setWithdrawalAmount(parseFloat(e.target.value))}\r\n            placeholder={t('enterWithdrawalAmount')}\r\n          />\r\n        </div>\r\n\r\n        {error && <p className={styles.error}>{error}</p>}\r\n\r\n        <button onClick={handleNext} className={styles.button}>\r\n          {t('nextButton')}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithdrawalPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}