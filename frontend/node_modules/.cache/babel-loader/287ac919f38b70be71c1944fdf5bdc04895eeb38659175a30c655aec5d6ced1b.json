{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import { useTranslation } from 'react-i18next'; // Import the translation hook\n// import styles from './UserDetailsPage.module.css'; // Import CSS module\n// import UserDetails from '../components/UserDetails';\n\n// const UserDetailsPage = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const { t } = useTranslation(); // Initialize translation hook\n//   const [user, setUser] = useState(null);\n//   const [error, setError] = useState('');\n//   // Extract OCR data passed from the previous page\n//   const { state } = location;\n//   const accountNumber = state?.accountNumber;\n//   const ifscCode = state?.ifscCode;\n\n//   useEffect(() => {\n//     // Simulate fetching user details from the backend\n//     const fetchUserDetails = async () => {\n//       // Simulated user data\n//       const mockUser = {\n//         name: 'ADHITHYA S',\n//         accountNumber: accountNumber || t('unknown'),\n//         branch: 'Tiruchengode Town Branch',\n//         ifscCode: ifscCode || t('unknown'),\n//       };\n\n//       setUser(mockUser);\n//     };\n\n//     fetchUserDetails();\n//   }, [accountNumber, ifscCode, t]); // Add `t` to dependency array for translations\n\n//   const handleAction = (action) => {\n//     navigate(`/${action}`, { state: { user } }); // Navigate to Deposit or Withdrawal page\n//   };\n\n//   return (\n//     <div className={styles.container}>\n//       <div className={styles.card}>\n//         <h2>{t('userDetails')}</h2>\n//         <p className={styles.detailRow}>\n//           <strong>{t('name')}:</strong> {user?.name}\n//         </p>\n//         <p className={styles.detailRow}>\n//           <strong>{t('accountNumber')}:</strong> {user?.accountNumber}\n//         </p>\n//         <p className={styles.detailRow}>\n//           <strong>{t('branch')}:</strong> {user?.branch}\n//         </p>\n//         <p className={styles.detailRow}>\n//           <strong>{t('ifscCode')}:</strong> {user?.ifscCode}\n//         </p>\n//       </div>\n\n//       <div className={styles.buttons}>\n//         <button className={styles.button} onClick={() => handleAction('deposit')}>\n//           {t('deposit')}\n//         </button>\n//         <button className={styles.button} onClick={() => handleAction('withdrawal')}>\n//           {t('withdrawal')}\n//         </button>\n//         <button className={styles.button}\n//   onClick={() =>\n//     navigate('/transaction-history', { state: { accountNumber: user.accountNumber } })\n//   }\n// >\n//   View Transactions\n// </button>\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserDetailsPage;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import { useTranslation } from 'react-i18next';\n// import styles from './UserDetailsPage.module.css';\n// import UserDetails from '../components/UserDetails';\n\n// const UserDetailsPage = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const { t } = useTranslation();\n//   const [user, setUser] = useState(null);\n//   const [error, setError] = useState('');\n//   const { state } = location;\n//   const accountNumber = state?.accountNumber;\n\n//   useEffect(() => {\n//     // const fetchUserDetails = async () => {\n//     //   try {\n//     //     const response = await fetch(`/api/user-details/${accountNumber}`);\n//     //     if (!response.ok) {\n//     //       throw new Error('Failed to fetch user details');\n//     //     }\n//     //     const data = await response.json();\n//     //     setUser(data);\n//     //   } catch (error) {\n//     //     console.error('Error fetching user details:', error);\n//     //     setError(t('failedToFetchUserDetails'));\n//     //   }\n//     // };\n//     // const fetchUserDetails = async () => {\n//     //   try {\n//     //     const response = await fetch(`/api/user-details/${accountNumber}`);\n//     //     console.log(`Fetching user details for account number: ${accountNumber}`);\n//     //     console.log('Response:', response);\n\n//     //     if (response.ok) {\n//     //       const userDetails = await response.json();\n//     //       setUser(userDetails); // Set user details\n//     //     } else {\n//     //       setError('User not found');\n//     //     }\n//     //     } catch (error) {\n//     //     console.error('Error fetching user details:', error.message);\n//     //     setError('Failed to fetch user details');\n//     //   }\n//     // };\n//     const fetchUserDetails = async () => {\n//       try {\n//         console.log(`Fetching user details for account number: ${accountNumber}`);\n//         const response = await fetch(`/api/user-details/${accountNumber}`);\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch user details');\n//         }\n//         const data = await response.json();\n//         console.log('Fetched user details:', data);\n//         setUser(data);\n//       } catch (error) {\n//         console.error('Error fetching user details:', error.message);\n//         setUser(null);\n//       }\n//     };\n\n//     if (accountNumber) {\n//       fetchUserDetails();\n//     } else {\n//       setError(t('noAccountNumberProvided'));\n//     }\n//   }, [accountNumber, t]);\n\n//   const handleAction = (action) => {\n//     navigate(`/${action}`, { state: { user } });\n//   };\n\n//   if (error) {\n//     return <p className={styles.error}>{error}</p>;\n//   }\n\n//   if (!user) {\n//     return <p className={styles.loading}>{t('loading')}</p>;\n//   }\n\n//   return (\n//     <div className={styles.container}>\n//       <div className={styles.card}>\n//         <h2>{t('userDetails')}</h2>\n//         <p className={styles.detailRow}>\n//   <strong>{t('name')}:</strong> {user?.name || t('unknown')}\n// </p>\n// <p className={styles.detailRow}>\n//   <strong>{t('accountNumber')}:</strong> {accountNumber || t('unknown')}\n// </p>\n// <p className={styles.detailRow}>\n//   <strong>{t('branch')}:</strong> {user?.branch || t('unknown')}\n// </p>\n// <p className={styles.detailRow}>\n//   <strong>{t('ifsc')}:</strong> {user?.ifsc || t('unknown')}\n// </p>\n// <p className={styles.detailRow}>\n//   <strong>{t('balance')}:</strong> â‚¹{user?.balance?.toFixed(2) || t('unknown')}\n// </p>\n\n//       </div>\n\n//       <div className={styles.buttons}>\n//         <button className={styles.button} onClick={() => handleAction('deposit')}>\n//           {t('deposit')}\n//         </button>\n//         <button className={styles.button} onClick={() => handleAction('withdrawal')}>\n//           {t('withdrawal')}\n//         </button>\n//         <button\n//           className={styles.button}\n//           onClick={() =>\n//             navigate('/transaction-history', { state: { accountNumber } })\n//           }\n//         >\n//           View Transactions\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserDetailsPage;","map":{"version":3,"names":[],"sources":["C:/Users/91994/Desktop/Challan_Project/frontend/src/pages/UserDetailsPage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\n// import { useTranslation } from 'react-i18next'; // Import the translation hook\r\n// import styles from './UserDetailsPage.module.css'; // Import CSS module\r\n// import UserDetails from '../components/UserDetails';\r\n\r\n// const UserDetailsPage = () => {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const { t } = useTranslation(); // Initialize translation hook\r\n//   const [user, setUser] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   // Extract OCR data passed from the previous page\r\n//   const { state } = location;\r\n//   const accountNumber = state?.accountNumber;\r\n//   const ifscCode = state?.ifscCode;\r\n\r\n//   useEffect(() => {\r\n//     // Simulate fetching user details from the backend\r\n//     const fetchUserDetails = async () => {\r\n//       // Simulated user data\r\n//       const mockUser = {\r\n//         name: 'ADHITHYA S',\r\n//         accountNumber: accountNumber || t('unknown'),\r\n//         branch: 'Tiruchengode Town Branch',\r\n//         ifscCode: ifscCode || t('unknown'),\r\n//       };\r\n\r\n//       setUser(mockUser);\r\n//     };\r\n\r\n//     fetchUserDetails();\r\n//   }, [accountNumber, ifscCode, t]); // Add `t` to dependency array for translations\r\n\r\n//   const handleAction = (action) => {\r\n//     navigate(`/${action}`, { state: { user } }); // Navigate to Deposit or Withdrawal page\r\n//   };\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <div className={styles.card}>\r\n//         <h2>{t('userDetails')}</h2>\r\n//         <p className={styles.detailRow}>\r\n//           <strong>{t('name')}:</strong> {user?.name}\r\n//         </p>\r\n//         <p className={styles.detailRow}>\r\n//           <strong>{t('accountNumber')}:</strong> {user?.accountNumber}\r\n//         </p>\r\n//         <p className={styles.detailRow}>\r\n//           <strong>{t('branch')}:</strong> {user?.branch}\r\n//         </p>\r\n//         <p className={styles.detailRow}>\r\n//           <strong>{t('ifscCode')}:</strong> {user?.ifscCode}\r\n//         </p>\r\n//       </div>\r\n\r\n//       <div className={styles.buttons}>\r\n//         <button className={styles.button} onClick={() => handleAction('deposit')}>\r\n//           {t('deposit')}\r\n//         </button>\r\n//         <button className={styles.button} onClick={() => handleAction('withdrawal')}>\r\n//           {t('withdrawal')}\r\n//         </button>\r\n//         <button className={styles.button}\r\n//   onClick={() =>\r\n//     navigate('/transaction-history', { state: { accountNumber: user.accountNumber } })\r\n//   }\r\n// >\r\n//   View Transactions\r\n// </button>\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserDetailsPage;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\n// import { useTranslation } from 'react-i18next';\r\n// import styles from './UserDetailsPage.module.css';\r\n// import UserDetails from '../components/UserDetails';\r\n\r\n// const UserDetailsPage = () => {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const { t } = useTranslation();\r\n//   const [user, setUser] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   const { state } = location;\r\n//   const accountNumber = state?.accountNumber;\r\n\r\n//   useEffect(() => {\r\n//     // const fetchUserDetails = async () => {\r\n//     //   try {\r\n//     //     const response = await fetch(`/api/user-details/${accountNumber}`);\r\n//     //     if (!response.ok) {\r\n//     //       throw new Error('Failed to fetch user details');\r\n//     //     }\r\n//     //     const data = await response.json();\r\n//     //     setUser(data);\r\n//     //   } catch (error) {\r\n//     //     console.error('Error fetching user details:', error);\r\n//     //     setError(t('failedToFetchUserDetails'));\r\n//     //   }\r\n//     // };\r\n//     // const fetchUserDetails = async () => {\r\n//     //   try {\r\n//     //     const response = await fetch(`/api/user-details/${accountNumber}`);\r\n//     //     console.log(`Fetching user details for account number: ${accountNumber}`);\r\n//     //     console.log('Response:', response);\r\n\r\n//     //     if (response.ok) {\r\n//     //       const userDetails = await response.json();\r\n//     //       setUser(userDetails); // Set user details\r\n//     //     } else {\r\n//     //       setError('User not found');\r\n//     //     }\r\n//     //     } catch (error) {\r\n//     //     console.error('Error fetching user details:', error.message);\r\n//     //     setError('Failed to fetch user details');\r\n//     //   }\r\n//     // };\r\n//     const fetchUserDetails = async () => {\r\n//       try {\r\n//         console.log(`Fetching user details for account number: ${accountNumber}`);\r\n//         const response = await fetch(`/api/user-details/${accountNumber}`);\r\n//         if (!response.ok) {\r\n//           throw new Error('Failed to fetch user details');\r\n//         }\r\n//         const data = await response.json();\r\n//         console.log('Fetched user details:', data);\r\n//         setUser(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching user details:', error.message);\r\n//         setUser(null);\r\n//       }\r\n//     };\r\n    \r\n    \r\n//     if (accountNumber) {\r\n//       fetchUserDetails();\r\n//     } else {\r\n//       setError(t('noAccountNumberProvided'));\r\n//     }\r\n//   }, [accountNumber, t]);\r\n\r\n//   const handleAction = (action) => {\r\n//     navigate(`/${action}`, { state: { user } });\r\n//   };\r\n\r\n//   if (error) {\r\n//     return <p className={styles.error}>{error}</p>;\r\n//   }\r\n\r\n//   if (!user) {\r\n//     return <p className={styles.loading}>{t('loading')}</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <div className={styles.card}>\r\n//         <h2>{t('userDetails')}</h2>\r\n//         <p className={styles.detailRow}>\r\n//   <strong>{t('name')}:</strong> {user?.name || t('unknown')}\r\n// </p>\r\n// <p className={styles.detailRow}>\r\n//   <strong>{t('accountNumber')}:</strong> {accountNumber || t('unknown')}\r\n// </p>\r\n// <p className={styles.detailRow}>\r\n//   <strong>{t('branch')}:</strong> {user?.branch || t('unknown')}\r\n// </p>\r\n// <p className={styles.detailRow}>\r\n//   <strong>{t('ifsc')}:</strong> {user?.ifsc || t('unknown')}\r\n// </p>\r\n// <p className={styles.detailRow}>\r\n//   <strong>{t('balance')}:</strong> â‚¹{user?.balance?.toFixed(2) || t('unknown')}\r\n// </p>\r\n\r\n//       </div>\r\n\r\n//       <div className={styles.buttons}>\r\n//         <button className={styles.button} onClick={() => handleAction('deposit')}>\r\n//           {t('deposit')}\r\n//         </button>\r\n//         <button className={styles.button} onClick={() => handleAction('withdrawal')}>\r\n//           {t('withdrawal')}\r\n//         </button>\r\n//         <button\r\n//           className={styles.button}\r\n//           onClick={() =>\r\n//             navigate('/transaction-history', { state: { accountNumber } })\r\n//           }\r\n//         >\r\n//           View Transactions\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserDetailsPage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}