{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import { useTranslation } from 'react-i18next'; // Import the translation hook\n// import styles from './WithdrawalPage.module.css';\n\n// const WithdrawalPage = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const { t } = useTranslation(); // Initialize translation hook\n//   const user = location.state?.user || {};\n//   const [withdrawalAmount, setWithdrawalAmount] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleNext = () => {\n//     setError('');\n//     const accountBalance = user?.accountBalance || 10000000;\n\n//     if (!withdrawalAmount || isNaN(withdrawalAmount)) {\n//       setError(t('enterValidAmount'));\n//       return;\n//     }\n\n//     if (withdrawalAmount > accountBalance) {\n//       setError(t('insufficientBalance'));\n//       return;\n//     }\n\n//     navigate('/authentication', { state: { user, total: withdrawalAmount } });\n//   };\n\n//   return (\n//     <div className={styles.container}>\n//       <div className={styles.card}>\n//         <h1 className={styles.title}>{t('withdrawalPageTitle')}</h1>\n//         <p className={styles.subtitle}>\n//           <strong>{t('accountHolder')}</strong> {user.name || t('unknown')}\n//         </p>\n//         <p className={styles.subtitle}>\n//           <strong> {t('accountNumberLabel')}</strong> {user?.account_number || t('unknown')}\n//         </p>\n//         <p className={styles.subtitle}>\n//           <strong>{t('accountBalance')}</strong> ₹{user.accountBalance || 10000000}\n//         </p>\n\n//         <div className={styles.inputContainer}>\n//           <label htmlFor=\"withdrawalAmount\" className={styles.label}>\n//             {t('enterWithdrawalAmount')}\n//           </label>\n//           <input\n//             type=\"number\"\n//             id=\"withdrawalAmount\"\n//             className={styles.input}\n//             value={withdrawalAmount}\n//             onChange={(e) => setWithdrawalAmount(parseFloat(e.target.value))}\n//             placeholder={t('enterWithdrawalAmount')}\n//           />\n//         </div>\n\n//         {error && <p className={styles.error}>{error}</p>}\n\n//         <button onClick={handleNext} className={styles.button}>\n//           {t('nextButton')}\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WithdrawalPage;\n\n//","map":{"version":3,"names":[],"sources":["C:/Users/91994/Desktop/Challan_Project/frontend/src/pages/WithdrawalPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import { useTranslation } from 'react-i18next'; // Import the translation hook\r\n// import styles from './WithdrawalPage.module.css';\r\n\r\n// const WithdrawalPage = () => {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const { t } = useTranslation(); // Initialize translation hook\r\n//   const user = location.state?.user || {};\r\n//   const [withdrawalAmount, setWithdrawalAmount] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleNext = () => {\r\n//     setError('');\r\n//     const accountBalance = user?.accountBalance || 10000000;\r\n\r\n//     if (!withdrawalAmount || isNaN(withdrawalAmount)) {\r\n//       setError(t('enterValidAmount'));\r\n//       return;\r\n//     }\r\n\r\n//     if (withdrawalAmount > accountBalance) {\r\n//       setError(t('insufficientBalance'));\r\n//       return;\r\n//     }\r\n\r\n//     navigate('/authentication', { state: { user, total: withdrawalAmount } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <div className={styles.card}>\r\n//         <h1 className={styles.title}>{t('withdrawalPageTitle')}</h1>\r\n//         <p className={styles.subtitle}>\r\n//           <strong>{t('accountHolder')}</strong> {user.name || t('unknown')}\r\n//         </p>\r\n//         <p className={styles.subtitle}>\r\n//           <strong> {t('accountNumberLabel')}</strong> {user?.account_number || t('unknown')}\r\n//         </p>\r\n//         <p className={styles.subtitle}>\r\n//           <strong>{t('accountBalance')}</strong> ₹{user.accountBalance || 10000000}\r\n//         </p>\r\n\r\n//         <div className={styles.inputContainer}>\r\n//           <label htmlFor=\"withdrawalAmount\" className={styles.label}>\r\n//             {t('enterWithdrawalAmount')}\r\n//           </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"withdrawalAmount\"\r\n//             className={styles.input}\r\n//             value={withdrawalAmount}\r\n//             onChange={(e) => setWithdrawalAmount(parseFloat(e.target.value))}\r\n//             placeholder={t('enterWithdrawalAmount')}\r\n//           />\r\n//         </div>\r\n\r\n//         {error && <p className={styles.error}>{error}</p>}\r\n\r\n//         <button onClick={handleNext} className={styles.button}>\r\n//           {t('nextButton')}\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default WithdrawalPage;\r\n\r\n\r\n// \r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}