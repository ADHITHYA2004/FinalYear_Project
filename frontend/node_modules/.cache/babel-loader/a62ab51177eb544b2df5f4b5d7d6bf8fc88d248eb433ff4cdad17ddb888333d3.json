{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91994\\\\Desktop\\\\Challan_Project\\\\frontend\\\\src\\\\pages\\\\TransactionMonitor.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import styles from './TransactionMonitor.module.css';\n\n// const TransactionMonitor = () => {\n//   const transactions = [\n//     { id: 1, user: 'John Doe', amount: 1000, type: 'Deposit', date: '2024-12-21' },\n//     { id: 2, user: 'Jane Smith', amount: 500, type: 'Withdrawal', date: '2024-12-22' },\n//   ];\n\n//   return (\n//     <div className={styles.container}>\n//       <h1 className={styles.title}>Transaction Monitor</h1>\n//       <table className={styles.table}>\n//         <thead>\n//           <tr>\n//             <th>User</th>\n//             <th>Amount</th>\n//             <th>Type</th>\n//             <th>Date</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map((txn) => (\n//             <tr key={txn.id}>\n//               <td>{txn.user}</td>\n//               <td>₹{txn.amount}</td>\n//               <td>{txn.type}</td>\n//               <td>{txn.date}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default TransactionMonitor;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from '../api/axios';\n// import styles from './TransactionMonitor.module.css';\n\n// const TransactionMonitor = () => {\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchTransactions();\n//   }, []);\n\n//   const fetchTransactions = async () => {\n//     try {\n//       const response = await axios.get('/transactions');\n//       setTransactions(response.data);\n//     } catch (error) {\n//       console.error('Error fetching transactions:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   if (loading) {\n//     return <p>Loading transactions...</p>;\n//   }\n\n//   return (\n//     <div className={styles.container}>\n//       <h1 className={styles.title}>Transaction Monitor</h1>\n//       <table className={styles.table}>\n//         <thead>\n//           <tr>\n//             <th>User Name</th>\n//             <th>Account Number</th>\n//             <th>Amount</th>\n//             <th>Type</th>\n//             <th>Date</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map((txn) => (\n//             <tr key={transaction.id}>\n//               <td>{transaction.user_name}</td>\n//               <td>{transaction.account_number}</td>\n//               <td>₹{transaction.amount}</td>\n//               <td>{transaction.type}</td>\n//               <td>{new Date(transaction.date).toLocaleString()}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default TransactionMonitor;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport styles from './TransactionMonitor.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionMonitor = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n  const fetchTransactions = async () => {\n    try {\n      const response = await axios.get('api/transactions');\n      setTransactions(response.data);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading transactions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Transaction Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"\\u20B9\", transaction.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionMonitor, \"DUmkRmOc9OB7ZZSQstrrGiz1MwE=\");\n_c = TransactionMonitor;\nexport default TransactionMonitor;\nvar _c;\n$RefreshReg$(_c, \"TransactionMonitor\");","map":{"version":3,"names":["React","useEffect","useState","axios","styles","jsxDEV","_jsxDEV","TransactionMonitor","_s","transactions","setTransactions","loading","setLoading","fetchTransactions","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","title","table","map","transaction","user","amount","type","date","id","_c","$RefreshReg$"],"sources":["C:/Users/91994/Desktop/Challan_Project/frontend/src/pages/TransactionMonitor.jsx"],"sourcesContent":["// import React from 'react';\r\n// import styles from './TransactionMonitor.module.css';\r\n\r\n// const TransactionMonitor = () => {\r\n//   const transactions = [\r\n//     { id: 1, user: 'John Doe', amount: 1000, type: 'Deposit', date: '2024-12-21' },\r\n//     { id: 2, user: 'Jane Smith', amount: 500, type: 'Withdrawal', date: '2024-12-22' },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <h1 className={styles.title}>Transaction Monitor</h1>\r\n//       <table className={styles.table}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>User</th>\r\n//             <th>Amount</th>\r\n//             <th>Type</th>\r\n//             <th>Date</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {transactions.map((txn) => (\r\n//             <tr key={txn.id}>\r\n//               <td>{txn.user}</td>\r\n//               <td>₹{txn.amount}</td>\r\n//               <td>{txn.type}</td>\r\n//               <td>{txn.date}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TransactionMonitor;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from '../api/axios';\r\n// import styles from './TransactionMonitor.module.css';\r\n\r\n// const TransactionMonitor = () => {\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     fetchTransactions();\r\n//   }, []);\r\n\r\n//   const fetchTransactions = async () => {\r\n//     try {\r\n//       const response = await axios.get('/transactions');\r\n//       setTransactions(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching transactions:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <p>Loading transactions...</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <h1 className={styles.title}>Transaction Monitor</h1>\r\n//       <table className={styles.table}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>User Name</th>\r\n//             <th>Account Number</th>\r\n//             <th>Amount</th>\r\n//             <th>Type</th>\r\n//             <th>Date</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {transactions.map((txn) => (\r\n//             <tr key={transaction.id}>\r\n//               <td>{transaction.user_name}</td>\r\n//               <td>{transaction.account_number}</td>\r\n//               <td>₹{transaction.amount}</td>\r\n//               <td>{transaction.type}</td>\r\n//               <td>{new Date(transaction.date).toLocaleString()}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TransactionMonitor;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axios';\r\nimport styles from './TransactionMonitor.module.css';\r\n\r\nconst TransactionMonitor = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  const fetchTransactions = async () => {\r\n    try {\r\n      const response = await axios.get('api/transactions');\r\n      setTransactions(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching transactions:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading transactions...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Transaction Monitor</h1>\r\n      <table className={styles.table}>\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Amount</th>\r\n            <th>Type</th>\r\n            <th>Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map((transaction) => (\r\n            <tr key={transaction.id}>\r\n              <td>{transaction.user}</td>\r\n              <td>₹{transaction.amount}</td>\r\n              <td>{transaction.type}</td>\r\n              <td>{transaction.date}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionMonitor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}