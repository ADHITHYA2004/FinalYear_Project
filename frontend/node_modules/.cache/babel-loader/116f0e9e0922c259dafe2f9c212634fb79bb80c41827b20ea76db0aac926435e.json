{"ast":null,"code":"// import React, { useState } from 'react';\n// import styles from './UserManagement.module.css';\n\n// const UserManagement = () => {\n//   const [users, setUsers] = useState([\n//     { id: 1, name: 'John Doe', accountNumber: '123456789', balance: 5000 },\n//     { id: 2, name: 'Jane Smith', accountNumber: '987654321', balance: 8000 },\n//   ]);\n\n//   const handleDelete = (id) => {\n//     setUsers(users.filter((user) => user.id !== id));\n//   };\n\n//   return (\n//     <div className={styles.container}>\n//       <h1 className={styles.title}>User Management</h1>\n//       <table className={styles.table}>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Account Number</th>\n//             <th>Balance</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td>{user.name}</td>\n//               <td>{user.accountNumber}</td>\n//               <td>₹{user.balance}</td>\n//               <td>\n//                 <button onClick={() => handleDelete(user.id)} className={styles.deleteButton}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserManagement;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from '../api/axios';\n// import styles from './UserManagement.module.css';\n\n// const UserManagement = () => {\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   const fetchUsers = async () => {\n//     try {\n//       const response = await axios.get('/users');\n//       setUsers(response.data);\n//     } catch (error) {\n//       console.error('Error fetching users:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`/users/${id}`);\n//       setUsers(users.filter((user) => user.id !== id));\n//     } catch (error) {\n//       console.error('Error deleting user:', error);\n//     }\n//   };\n\n//   if (loading) {\n//     return <p>Loading users...</p>;\n//   }\n\n//   return (\n//     <div className={styles.container}>\n//       <h1 className={styles.title}>User Management</h1>\n//       <table className={styles.table}>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Account Number</th>\n//             <th>Balance</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td>{user.name}</td>\n//               <td>{user.accountNumber}</td>\n//               <td>₹{user.balance}</td>\n//               <td>\n//                 <button onClick={() => handleDelete(user.id)} className={styles.deleteButton}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserManagement;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from '../api/axios';\n// import styles from './UserManagement.module.css';\n\n// const UserManagement = () => {\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [newUser, setNewUser] = useState({\n//     name: '',\n//     accountNumber: '',\n//     ifsc: '',\n//     phoneNo: '',\n//     address: '',\n//     pin: '',\n//     balance: '',\n//   });\n//   const [editingUser, setEditingUser] = useState(null);\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   const fetchUsers = async () => {\n//     try {\n//       const response = await axios.get('/users');\n//       setUsers(response.data);\n//     } catch (error) {\n//       console.error('Error fetching users:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleDelete = async (accountNumber) => {\n//     try {\n//       await axios.delete(`/users/${accountNumber}`);\n//       setUsers(users.filter((user) => user.account_number !== accountNumber));\n//     } catch (error) {\n//       console.error('Error deleting user:', error);\n//     }\n//   };\n\n//   const handleCreate = async () => {\n//     try {\n//       await axios.post('/users', newUser);\n//       fetchUsers();\n//       setNewUser({ name: '', accountNumber: '', ifsc: '', phoneNo: '', address: '', pin: '', balance: '' });\n//     } catch (error) {\n//       console.error('Error creating user:', error);\n//     }\n//   };\n\n//   const handleUpdate = async () => {\n//     try {\n//       await axios.put(`/users/${editingUser.account_number}`, editingUser);\n//       fetchUsers();\n//       setEditingUser(null);\n//     } catch (error) {\n//       console.error('Error updating user:', error);\n//     }\n//   };\n\n//   if (loading) {\n//     return <p>Loading users...</p>;\n//   }\n\n//   return (\n//     <div className={styles.container}>\n//       <h1 className={styles.title}>User Management</h1>\n\n//       {/* Create User Form */}\n//       <div className={styles.form}>\n//         <h2>Create New User</h2>\n//         <input type=\"text\" placeholder=\"Name\" value={newUser.name} onChange={(e) => setNewUser({ ...newUser, name: e.target.value })} />\n//         <input type=\"text\" placeholder=\"Account Number\" value={newUser.accountNumber} onChange={(e) => setNewUser({ ...newUser, accountNumber: e.target.value })} />\n//         <input type=\"text\" placeholder=\"IFSC Code\" value={newUser.ifsc} onChange={(e) => setNewUser({ ...newUser, ifsc: e.target.value })} />\n//         <input type=\"text\" placeholder=\"Phone No\" value={newUser.phoneNo} onChange={(e) => setNewUser({ ...newUser, phoneNo: e.target.value })} />\n//         <input type=\"text\" placeholder=\"Address\" value={newUser.address} onChange={(e) => setNewUser({ ...newUser, address: e.target.value })} />\n//         <input type=\"text\" placeholder=\"Pin\" value={newUser.pin} onChange={(e) => setNewUser({ ...newUser, pin: e.target.value })} />\n//         <input type=\"number\" placeholder=\"Balance\" value={newUser.balance} onChange={(e) => setNewUser({ ...newUser, balance: e.target.value })} />\n//         <button onClick={handleCreate}>Add User</button>\n//       </div>\n\n//       {/* Update User Form */}\n//       {editingUser && (\n//         <div className={styles.form}>\n//           <h2>Edit User</h2>\n//           <input type=\"text\" value={editingUser.name} onChange={(e) => setEditingUser({ ...editingUser, name: e.target.value })} />\n//           <input type=\"text\" value={editingUser.ifsc} onChange={(e) => setEditingUser({ ...editingUser, ifsc: e.target.value })} />\n//           <input type=\"text\" value={editingUser.phoneNo} onChange={(e) => setEditingUser({ ...editingUser, phoneNo: e.target.value })} />\n//           <input type=\"text\" value={editingUser.address} onChange={(e) => setEditingUser({ ...editingUser, address: e.target.value })} />\n//           <input type=\"text\" value={editingUser.pin} onChange={(e) => setEditingUser({ ...editingUser, pin: e.target.value })} />\n//           <input type=\"number\" value={editingUser.balance} onChange={(e) => setEditingUser({ ...editingUser, balance: e.target.value })} />\n//           <button onClick={handleUpdate}>Update</button>\n//           <button onClick={() => setEditingUser(null)}>Cancel</button>\n//         </div>\n//       )}\n\n//       {/* User Table */}\n//       <table className={styles.table}>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Account Number</th>\n//             <th>IFSC</th>\n//             <th>Phone No</th>\n//             <th>Address</th>\n//             <th>Pin</th>\n//             <th>Balance</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.account_number}>\n//               <td>{user.name}</td>\n//               <td>{user.account_number}</td>\n//               <td>{user.ifsc}</td>\n//               <td>{user.phone_no}</td>\n//               <td>{user.address}</td>\n//               <td>{user.pin}</td>\n//               <td>₹{user.balance}</td>\n//               <td>\n//                 <button onClick={() => setEditingUser(user)}>Edit</button>\n//                 <button onClick={() => handleDelete(user.account_number)} className={styles.deleteButton}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserManagement;","map":{"version":3,"names":[],"sources":["C:/Users/91994/Desktop/Challan_Project/frontend/src/pages/UserManagement.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import styles from './UserManagement.module.css';\r\n\r\n// const UserManagement = () => {\r\n//   const [users, setUsers] = useState([\r\n//     { id: 1, name: 'John Doe', accountNumber: '123456789', balance: 5000 },\r\n//     { id: 2, name: 'Jane Smith', accountNumber: '987654321', balance: 8000 },\r\n//   ]);\r\n\r\n//   const handleDelete = (id) => {\r\n//     setUsers(users.filter((user) => user.id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <h1 className={styles.title}>User Management</h1>\r\n//       <table className={styles.table}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Account Number</th>\r\n//             <th>Balance</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.accountNumber}</td>\r\n//               <td>₹{user.balance}</td>\r\n//               <td>\r\n//                 <button onClick={() => handleDelete(user.id)} className={styles.deleteButton}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserManagement;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from '../api/axios';\r\n// import styles from './UserManagement.module.css';\r\n\r\n// const UserManagement = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get('/users');\r\n//       setUsers(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching users:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`/users/${id}`);\r\n//       setUsers(users.filter((user) => user.id !== id));\r\n//     } catch (error) {\r\n//       console.error('Error deleting user:', error);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <p>Loading users...</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <h1 className={styles.title}>User Management</h1>\r\n//       <table className={styles.table}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Account Number</th>\r\n//             <th>Balance</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.accountNumber}</td>\r\n//               <td>₹{user.balance}</td>\r\n//               <td>\r\n//                 <button onClick={() => handleDelete(user.id)} className={styles.deleteButton}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserManagement;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from '../api/axios';\r\n// import styles from './UserManagement.module.css';\r\n\r\n// const UserManagement = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [newUser, setNewUser] = useState({\r\n//     name: '',\r\n//     accountNumber: '',\r\n//     ifsc: '',\r\n//     phoneNo: '',\r\n//     address: '',\r\n//     pin: '',\r\n//     balance: '',\r\n//   });\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get('/users');\r\n//       setUsers(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching users:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (accountNumber) => {\r\n//     try {\r\n//       await axios.delete(`/users/${accountNumber}`);\r\n//       setUsers(users.filter((user) => user.account_number !== accountNumber));\r\n//     } catch (error) {\r\n//       console.error('Error deleting user:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleCreate = async () => {\r\n//     try {\r\n//       await axios.post('/users', newUser);\r\n//       fetchUsers();\r\n//       setNewUser({ name: '', accountNumber: '', ifsc: '', phoneNo: '', address: '', pin: '', balance: '' });\r\n//     } catch (error) {\r\n//       console.error('Error creating user:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleUpdate = async () => {\r\n//     try {\r\n//       await axios.put(`/users/${editingUser.account_number}`, editingUser);\r\n//       fetchUsers();\r\n//       setEditingUser(null);\r\n//     } catch (error) {\r\n//       console.error('Error updating user:', error);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <p>Loading users...</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <h1 className={styles.title}>User Management</h1>\r\n\r\n//       {/* Create User Form */}\r\n//       <div className={styles.form}>\r\n//         <h2>Create New User</h2>\r\n//         <input type=\"text\" placeholder=\"Name\" value={newUser.name} onChange={(e) => setNewUser({ ...newUser, name: e.target.value })} />\r\n//         <input type=\"text\" placeholder=\"Account Number\" value={newUser.accountNumber} onChange={(e) => setNewUser({ ...newUser, accountNumber: e.target.value })} />\r\n//         <input type=\"text\" placeholder=\"IFSC Code\" value={newUser.ifsc} onChange={(e) => setNewUser({ ...newUser, ifsc: e.target.value })} />\r\n//         <input type=\"text\" placeholder=\"Phone No\" value={newUser.phoneNo} onChange={(e) => setNewUser({ ...newUser, phoneNo: e.target.value })} />\r\n//         <input type=\"text\" placeholder=\"Address\" value={newUser.address} onChange={(e) => setNewUser({ ...newUser, address: e.target.value })} />\r\n//         <input type=\"text\" placeholder=\"Pin\" value={newUser.pin} onChange={(e) => setNewUser({ ...newUser, pin: e.target.value })} />\r\n//         <input type=\"number\" placeholder=\"Balance\" value={newUser.balance} onChange={(e) => setNewUser({ ...newUser, balance: e.target.value })} />\r\n//         <button onClick={handleCreate}>Add User</button>\r\n//       </div>\r\n\r\n//       {/* Update User Form */}\r\n//       {editingUser && (\r\n//         <div className={styles.form}>\r\n//           <h2>Edit User</h2>\r\n//           <input type=\"text\" value={editingUser.name} onChange={(e) => setEditingUser({ ...editingUser, name: e.target.value })} />\r\n//           <input type=\"text\" value={editingUser.ifsc} onChange={(e) => setEditingUser({ ...editingUser, ifsc: e.target.value })} />\r\n//           <input type=\"text\" value={editingUser.phoneNo} onChange={(e) => setEditingUser({ ...editingUser, phoneNo: e.target.value })} />\r\n//           <input type=\"text\" value={editingUser.address} onChange={(e) => setEditingUser({ ...editingUser, address: e.target.value })} />\r\n//           <input type=\"text\" value={editingUser.pin} onChange={(e) => setEditingUser({ ...editingUser, pin: e.target.value })} />\r\n//           <input type=\"number\" value={editingUser.balance} onChange={(e) => setEditingUser({ ...editingUser, balance: e.target.value })} />\r\n//           <button onClick={handleUpdate}>Update</button>\r\n//           <button onClick={() => setEditingUser(null)}>Cancel</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* User Table */}\r\n//       <table className={styles.table}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Account Number</th>\r\n//             <th>IFSC</th>\r\n//             <th>Phone No</th>\r\n//             <th>Address</th>\r\n//             <th>Pin</th>\r\n//             <th>Balance</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.account_number}>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.account_number}</td>\r\n//               <td>{user.ifsc}</td>\r\n//               <td>{user.phone_no}</td>\r\n//               <td>{user.address}</td>\r\n//               <td>{user.pin}</td>\r\n//               <td>₹{user.balance}</td>\r\n//               <td>\r\n//                 <button onClick={() => setEditingUser(user)}>Edit</button>\r\n//                 <button onClick={() => handleDelete(user.account_number)} className={styles.deleteButton}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserManagement;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}